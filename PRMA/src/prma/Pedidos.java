/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prma;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;

import java.io.FileOutputStream;

/**
 *
 * @author Fernando
 */
public class Pedidos extends javax.swing.JFrame {
    private CRUD crud = new CRUD();//crear una instancia hacia el crud
    private DefaultTableModel modeloTabla;


    /**
     * Creates new form Pedidos
     */
    public Pedidos() {
        initComponents();
        crud = new CRUD();
        modeloTabla = (DefaultTableModel) pedidosAdmin.getModel();
        cargarPedidos();
    }

    private void cargarPedidos() {
        modeloTabla.setRowCount(0);
        ArrayList<String[]> articulos = crud.obtenerPedidos();
        for (String[] u : articulos) {
            modeloTabla.addRow(u);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pedidosAdmin = new javax.swing.JTable();
        regre = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        actualizar = new javax.swing.JButton();
        pdf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("GESTIÓN DE PEDIDOS");

        pedidosAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Precio", "Cantidad", "Total", "Estatus", "Departamento"
            }
        ));
        jScrollPane1.setViewportView(pedidosAdmin);

        regre.setText("Regresar");
        regre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regreActionPerformed(evt);
            }
        });

        jLabel2.setText("CAMBIAR ESTATUS");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "En proceso", "Articulo no Disponible", "Disponible para Recolectar", "Entregado" }));

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        pdf.setText("Descargar PDF");
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(regre)
                                .addGap(93, 93, 93)
                                .addComponent(jLabel2)
                                .addGap(37, 37, 37)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(actualizar)))
                        .addGap(0, 80, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(pdf)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regre)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(pdf)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regreActionPerformed
        // TODO add your handling code here:
        new menuAdmin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_regreActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = pedidosAdmin.getSelectedRow();

    if (filaSeleccionada != -1) {
        String idPedido = pedidosAdmin.getValueAt(filaSeleccionada, 0).toString(); // Columna 0: ID
        String nuevoEstatus = jComboBox1.getSelectedItem().toString();

        boolean actualizado = crud.actualizarEstatusPedido(idPedido, nuevoEstatus);

        if (actualizado) {
            JOptionPane.showMessageDialog(null, "Estatus actualizado correctamente.");
            cargarPedidos(); // refresca la tabla
        } else {
            JOptionPane.showMessageDialog(null, "Error al actualizar el estatus.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Selecciona un pedido para actualizar su estatus.");
    }
    }//GEN-LAST:event_actualizarActionPerformed

    
    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
        // TODO add your handling code here:
        generarPDF();
        Document document = new Document();
        try {
            PdfWriter.getInstance(document, new FileOutputStream("reporte_pedidos.pdf"));
            document.open();

            // Título
            Paragraph titulo = new Paragraph("Pedidos ordenados por departamento", 
                FontFactory.getFont(FontFactory.HELVETICA_BOLD, 16, Font.BOLD, BaseColor.BLACK));
            titulo.setAlignment(Element.ALIGN_CENTER);
            document.add(titulo);
            document.add(Chunk.NEWLINE); // Espacio

            // Tabla
            PdfPTable tabla = new PdfPTable(modeloTabla.getColumnCount());
            for (int i = 0; i < modeloTabla.getColumnCount(); i++) {
                tabla.addCell(new PdfPCell(new Phrase(modeloTabla.getColumnName(i))));
            }

            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                for (int j = 0; j < modeloTabla.getColumnCount(); j++) {
                    tabla.addCell(modeloTabla.getValueAt(i, j).toString());
                }
            }

            document.add(tabla);
            document.close();

            JOptionPane.showMessageDialog(null, "PDF generado correctamente.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar el PDF.");
        }
    }//GEN-LAST:event_pdfActionPerformed
    private void generarPDF() {
        Document documento = new Document();
        try {
            PdfWriter.getInstance(documento, new FileOutputStream("reporte_pedidos.pdf"));
            documento.open();
            documento.add(new Paragraph("Reporte de Pedidos\n\n"));

            PdfPTable tabla = new PdfPTable(pedidosAdmin.getColumnCount());

            // Agregar encabezados
            for (int i = 0; i < pedidosAdmin.getColumnCount(); i++) {
                tabla.addCell(pedidosAdmin.getColumnName(i));
            }

            // Agregar filas
            for (int i = 0; i < pedidosAdmin.getRowCount(); i++) {
                for (int j = 0; j < pedidosAdmin.getColumnCount(); j++) {
                    Object valor = pedidosAdmin.getValueAt(i, j);
                    tabla.addCell(valor != null ? valor.toString() : "");
                }
            }

            documento.add(tabla);
            documento.close();

            JOptionPane.showMessageDialog(this, "PDF generado exitosamente como 'reporte_pedidos.pdf'");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al generar el PDF");
        }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pdf;
    private javax.swing.JTable pedidosAdmin;
    private javax.swing.JButton regre;
    // End of variables declaration//GEN-END:variables
}
